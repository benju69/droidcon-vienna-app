buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.3.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.google.gms:google-services:3.0.0'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1'
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.android.application'
apply from: rootProject.file('settings/gradle/jacoco.gradle')
apply from: rootProject.file('settings/gradle/sonarqube.gradle')

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId 'at.droidcon.vienna2016'
        versionCode 13
        versionName '1.0.9'

        minSdkVersion 15
        targetSdkVersion 25
        resConfigs 'en'

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha}\""
        buildConfigField 'String', 'API_ENDPOINT', "\"https://droidcon.at/api/v1/\""
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'TWITTER_KEY', "\"${TWITTER_KEY}\""
            buildConfigField 'String', 'TWITTER_SECRET', "\"${TWITTER_SECRET}\""
            versionNameSuffix '-dev'
            debuggable true
            testCoverageEnabled true
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField 'String', 'TWITTER_KEY', "\"${TWITTER_KEY}\""
            buildConfigField 'String', 'TWITTER_SECRET', "\"${TWITTER_SECRET}\""
            minifyEnabled true
            shrinkResources true

            proguardFile rootProject.file('settings/proguard/fragmentargs.pro')
            proguardFile rootProject.file('settings/proguard/icepick.pro')
            proguardFile rootProject.file('settings/proguard/lombok.pro')
            proguardFile rootProject.file('settings/proguard/okhttp3.pro')
            proguardFile rootProject.file('settings/proguard/okio.pro')
            proguardFile rootProject.file('settings/proguard/picasso.pro')
            proguardFile rootProject.file('settings/proguard/retrofit2.pro')
            proguardFile rootProject.file('settings/proguard/retrolambda.pro')
            proguardFile rootProject.file('settings/proguard/rx-java.pro')
            proguardFile rootProject.file('settings/proguard/streamsupport.pro')
            proguardFile rootProject.file('settings/proguard/support-design.pro')
            proguardFile rootProject.file('settings/proguard/support-v4.pro')
            proguardFile rootProject.file('settings/proguard/support-v7-appcompat.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

ext.butterknifeVersion = '8.4.0'
ext.daggerVersion = '2.7'
ext.fragmentargsVersion = '3.0.2'
ext.icepickVersion = '3.2.0'
ext.intentbuilderVersion = '0.14.0'
ext.okhttpVersion = '3.4.1'
ext.retrofitVersion = '2.1.0'
ext.supportVersion = '25.1.1'
ext.playVersion = '10.2.0'

dependencies {
    compile "com.android.support:support-core-ui:$supportVersion"
    compile "com.android.support:support-fragment:$supportVersion"
    compile "com.android.support:support-annotations:$supportVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:preference-v14:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:customtabs:$supportVersion"

    compile "com.google.android.gms:play-services-base:$playVersion"
    compile "com.google.firebase:firebase-crash:$playVersion"
    compile "com.google.firebase:firebase-messaging:$playVersion"
    compile "com.google.firebase:firebase-config:$playVersion"
    compile "com.google.firebase:firebase-core:$playVersion"
    compile "com.google.firebase:firebase-database:$playVersion"

    provided 'org.projectlombok:lombok:1.16.10'

    compile 'net.sourceforge.streamsupport:streamsupport:1.5.1'

    compile "com.google.dagger:dagger:$daggerVersion"
    apt "com.google.dagger:dagger-compiler:$daggerVersion"

    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"

    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.0'

    compile 'com.jakewharton.timber:timber:4.3.1'
    compile 'com.squareup.moshi:moshi:1.2.0'

    compile "com.jakewharton:butterknife:$butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    compile "frankiesardo:icepick:$icepickVersion"
    provided "frankiesardo:icepick-processor:$icepickVersion"

    compile "se.emilsjolander:intentbuilder-api:$intentbuilderVersion"
    apt "se.emilsjolander:intentbuilder-compiler:$intentbuilderVersion"

    compile "com.hannesdorfmann.fragmentargs:annotation:$fragmentargsVersion"
    apt "com.hannesdorfmann.fragmentargs:processor:$fragmentargsVersion"

    compile 'com.squareup.sqlbrite:sqlbrite:0.7.0'

    compile 'com.jakewharton.threetenabp:threetenabp:1.0.4'

    compile('com.twitter.sdk.android:twitter:2.0.1@aar') {
        transitive = true;
    }

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.30'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.robolectric:robolectric:3.1.2'
}

// print build finish time
gradle.buildFinished { buildResult ->
    def buildFinishDate = new Date()
    def formattedDate = buildFinishDate.format('yyyy-MM-dd HH:mm:ss')
    println "Build finished: ${formattedDate}"
}

apply plugin: 'com.google.gms.google-services'
